{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My Journey This is a documentation page of everything I have learned so far in my internship. Links to other repositories are available so any code or project developed can easily be accessed. Overview So far I've started to learn more about Linux and Docker. Learning Linux was straightforward: I had some experience using other Linux distributions in the past. Docker on the other hand was something unique. Before enrolling in this internship I'd never heard of Docker before. It was challenging at first, but as things got going it turned out to be quite simple (even though I wouldn't consider myself any sort of intermediate Docker user). Since learning Linux and Docker were basically all I did, this documentation only concerns those two topics with one more topic used to document this documentation process.","title":"My Journey"},{"location":"#my-journey","text":"This is a documentation page of everything I have learned so far in my internship. Links to other repositories are available so any code or project developed can easily be accessed.","title":"My Journey"},{"location":"#overview","text":"So far I've started to learn more about Linux and Docker. Learning Linux was straightforward: I had some experience using other Linux distributions in the past. Docker on the other hand was something unique. Before enrolling in this internship I'd never heard of Docker before. It was challenging at first, but as things got going it turned out to be quite simple (even though I wouldn't consider myself any sort of intermediate Docker user). Since learning Linux and Docker were basically all I did, this documentation only concerns those two topics with one more topic used to document this documentation process.","title":"Overview"},{"location":"behind-the-documentation/","text":"Making This Documentation Going around and learning new things is great, but there is no real value to it if we cannot apply it somehow. That being said, this portion of the documentation documents the process of creating this documentation page. Learning MkDocs We start from the very basics: researching and learning. The first thing done was going to MkDocs documentation page and learning what it was and the basics on how to use it. Quickly learning about MkDocs showed that I did not have a good understanding of what a static site generator was and neither what a static site was. So I started reading some blogs to find the answers like here , here , here and here . Material The next step was to learn a little more on static site generators and for that matter I started learning more about Material , a nice looking theme for MkDocs. GitHub Pages The final step before trying any implementation was to learn how to host a static webpage. I ended learning about GitHub Pages as it would allow a free and easily deployable way to host this documentation. The integration between Github Pages and GitHub was also a great factor. Starting Up The next step was to get my hands on Material and GitHub Pages and start practising. Material To get myself around Material I had to get Material installed. At least that's what I thought. There is an official Docker image for Material so running it was as easy as writing: docker pull squidfunk/mkdocs-material docker run --rm -it -v ${PWD}:/docs squidfunk mkdocs-material new . Then, I had to get a way to actually see what I was doing in the project. Once again, it was very simple: docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Now I could see what I was doing and could move to the next step. GitHub Pages The hardest part so far. Setting the YAML as shown here to the root of my repository was easy. Understanding how GitHub uses it was not. After sometime reading the GitHub Pages documentation and finally understanding how to set it up I got a green check mark and was ready to move.","title":"Making This Documentation"},{"location":"behind-the-documentation/#making-this-documentation","text":"Going around and learning new things is great, but there is no real value to it if we cannot apply it somehow. That being said, this portion of the documentation documents the process of creating this documentation page.","title":"Making This Documentation"},{"location":"behind-the-documentation/#learning","text":"","title":"Learning"},{"location":"behind-the-documentation/#mkdocs","text":"We start from the very basics: researching and learning. The first thing done was going to MkDocs documentation page and learning what it was and the basics on how to use it. Quickly learning about MkDocs showed that I did not have a good understanding of what a static site generator was and neither what a static site was. So I started reading some blogs to find the answers like here , here , here and here .","title":"MkDocs"},{"location":"behind-the-documentation/#material","text":"The next step was to learn a little more on static site generators and for that matter I started learning more about Material , a nice looking theme for MkDocs.","title":"Material"},{"location":"behind-the-documentation/#github-pages","text":"The final step before trying any implementation was to learn how to host a static webpage. I ended learning about GitHub Pages as it would allow a free and easily deployable way to host this documentation. The integration between Github Pages and GitHub was also a great factor.","title":"GitHub Pages"},{"location":"behind-the-documentation/#starting-up","text":"The next step was to get my hands on Material and GitHub Pages and start practising.","title":"Starting Up"},{"location":"behind-the-documentation/#material_1","text":"To get myself around Material I had to get Material installed. At least that's what I thought. There is an official Docker image for Material so running it was as easy as writing: docker pull squidfunk/mkdocs-material docker run --rm -it -v ${PWD}:/docs squidfunk mkdocs-material new . Then, I had to get a way to actually see what I was doing in the project. Once again, it was very simple: docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Now I could see what I was doing and could move to the next step.","title":"Material"},{"location":"behind-the-documentation/#github-pages_1","text":"The hardest part so far. Setting the YAML as shown here to the root of my repository was easy. Understanding how GitHub uses it was not. After sometime reading the GitHub Pages documentation and finally understanding how to set it up I got a green check mark and was ready to move.","title":"GitHub Pages"},{"location":"docker-course/overview-sections/","text":"Course Sections Here we present an overview of what each section talks about. Section 1 What is Docker Introduction to Docker and basics concepts behind the platform. Docker Installation A guide on how to install Docker on most OS out there. Small instructions for Linux in the course, had to resort to the official guide for Ubuntu installations . Basic use of Docker Client Using commands to check if the installation was correctly done. docker version docker run hello-world Section 2 Containers What are containers, how to run them and what running a container truly is. Basic Commands Introduction to useful commands. docker ps docker run docker system docker kill docker start docker create docker stop docker logs docker exec ... Isolated Containers Showing that a container is virtually isolated from the running machine and other containers running along side it by default. Section 3 Creating a Container Image Creating a container image using the command build . docker build docker build -t matheusboy/image-tag Dockerfile What is a Dockerfile, how it works and how to make one. Base Images Using base images to build Docker images. The Build Process How the building process of an image takes place. Manual Image Generation using the commit command to manually generate an image. docker commit container-id Section 4 JavaScript App Writing a simple JS App to work along the section. Application Container Building a container for the application from a Dockerfile. Debugging Revising common mistakes made during the project creation. Port Mapping How to port map a container. docker run -p HostPort:ContainerPort <image-id> Section 5 Visits Counter Another project to be used along this section: a simple webpage with a visits counter. Docker Compose What is Docker Compose and how to use it. Using Docker Compose to run multiple containers. Setting up a Docker Compose YAML file and basic commands. docker-compose up docker-compose down docker-compose build docker-compose create ... Section 6 Development Workflow How a development workflow works and using it to implementing a React App project. Creating a Dockerfile.dev To implement the project in the development stage it's used a Dockerfile.dev to differ from the Dockerfile that's going to be used in the production stage. Docker Volumes How to use volumes in a container. More info here . docker volume docker run -v $(pwd):<volumedir> <image-id> Docker Compose Services Setting up different services with Docker Compose. Multi-step Docker Builds Setting up a production stage Dockerfile with multiple building steps. Section 7 Using Travis and AWS What is Travis and AWS and how to set them up. Travis YAML Creating a basic Travis YAMl file and integrating it to GitHub so pull requests can be automatically tested and deployed into AWS. Section 8 React App Project Entire section was about writing JavaScript code for a Fibonacci Calculator using React. It will be a multi-container project. Section 9 Applying Docker Knowledge - Development Up to this point the course have presented a great deal of information and most of what have been seen in this section was already seen in past sections. The difference was on how what we have seen can be used to implement projects, in this case the Fibonacci Calculator. Using Docker Compose to state various services, multi-building process and containers configurations. Section 10 Applying Docker Knowledge - Production Much like Section 9, in this section our knowledge acquired was applied in order to make the production stage files.","title":"Course Sections"},{"location":"docker-course/overview-sections/#course-sections","text":"Here we present an overview of what each section talks about.","title":"Course Sections"},{"location":"docker-course/overview-sections/#section-1","text":"","title":"Section 1"},{"location":"docker-course/overview-sections/#what-is-docker","text":"Introduction to Docker and basics concepts behind the platform.","title":"What is Docker"},{"location":"docker-course/overview-sections/#docker-installation","text":"A guide on how to install Docker on most OS out there. Small instructions for Linux in the course, had to resort to the official guide for Ubuntu installations .","title":"Docker Installation"},{"location":"docker-course/overview-sections/#basic-use-of-docker-client","text":"Using commands to check if the installation was correctly done. docker version docker run hello-world","title":"Basic use of Docker Client"},{"location":"docker-course/overview-sections/#section-2","text":"","title":"Section 2"},{"location":"docker-course/overview-sections/#containers","text":"What are containers, how to run them and what running a container truly is.","title":"Containers"},{"location":"docker-course/overview-sections/#basic-commands","text":"Introduction to useful commands. docker ps docker run docker system docker kill docker start docker create docker stop docker logs docker exec ...","title":"Basic Commands"},{"location":"docker-course/overview-sections/#isolated-containers","text":"Showing that a container is virtually isolated from the running machine and other containers running along side it by default.","title":"Isolated Containers"},{"location":"docker-course/overview-sections/#section-3","text":"","title":"Section 3"},{"location":"docker-course/overview-sections/#creating-a-container-image","text":"Creating a container image using the command build . docker build docker build -t matheusboy/image-tag","title":"Creating a Container Image"},{"location":"docker-course/overview-sections/#dockerfile","text":"What is a Dockerfile, how it works and how to make one.","title":"Dockerfile"},{"location":"docker-course/overview-sections/#base-images","text":"Using base images to build Docker images.","title":"Base Images"},{"location":"docker-course/overview-sections/#the-build-process","text":"How the building process of an image takes place.","title":"The Build Process"},{"location":"docker-course/overview-sections/#manual-image-generation","text":"using the commit command to manually generate an image. docker commit container-id","title":"Manual Image Generation"},{"location":"docker-course/overview-sections/#section-4","text":"","title":"Section 4"},{"location":"docker-course/overview-sections/#javascript-app","text":"Writing a simple JS App to work along the section.","title":"JavaScript App"},{"location":"docker-course/overview-sections/#application-container","text":"Building a container for the application from a Dockerfile.","title":"Application Container"},{"location":"docker-course/overview-sections/#debugging","text":"Revising common mistakes made during the project creation.","title":"Debugging"},{"location":"docker-course/overview-sections/#port-mapping","text":"How to port map a container. docker run -p HostPort:ContainerPort <image-id>","title":"Port Mapping"},{"location":"docker-course/overview-sections/#section-5","text":"","title":"Section 5"},{"location":"docker-course/overview-sections/#visits-counter","text":"Another project to be used along this section: a simple webpage with a visits counter.","title":"Visits Counter"},{"location":"docker-course/overview-sections/#docker-compose","text":"What is Docker Compose and how to use it. Using Docker Compose to run multiple containers. Setting up a Docker Compose YAML file and basic commands. docker-compose up docker-compose down docker-compose build docker-compose create ...","title":"Docker Compose"},{"location":"docker-course/overview-sections/#section-6","text":"","title":"Section 6"},{"location":"docker-course/overview-sections/#development-workflow","text":"How a development workflow works and using it to implementing a React App project.","title":"Development Workflow"},{"location":"docker-course/overview-sections/#creating-a-dockerfiledev","text":"To implement the project in the development stage it's used a Dockerfile.dev to differ from the Dockerfile that's going to be used in the production stage.","title":"Creating a Dockerfile.dev"},{"location":"docker-course/overview-sections/#docker-volumes","text":"How to use volumes in a container. More info here . docker volume docker run -v $(pwd):<volumedir> <image-id>","title":"Docker Volumes"},{"location":"docker-course/overview-sections/#docker-compose-services","text":"Setting up different services with Docker Compose.","title":"Docker Compose Services"},{"location":"docker-course/overview-sections/#multi-step-docker-builds","text":"Setting up a production stage Dockerfile with multiple building steps.","title":"Multi-step Docker Builds"},{"location":"docker-course/overview-sections/#section-7","text":"","title":"Section 7"},{"location":"docker-course/overview-sections/#using-travis-and-aws","text":"What is Travis and AWS and how to set them up.","title":"Using Travis and AWS"},{"location":"docker-course/overview-sections/#travis-yaml","text":"Creating a basic Travis YAMl file and integrating it to GitHub so pull requests can be automatically tested and deployed into AWS.","title":"Travis YAML"},{"location":"docker-course/overview-sections/#section-8","text":"","title":"Section 8"},{"location":"docker-course/overview-sections/#react-app-project","text":"Entire section was about writing JavaScript code for a Fibonacci Calculator using React. It will be a multi-container project.","title":"React App Project"},{"location":"docker-course/overview-sections/#section-9","text":"","title":"Section 9"},{"location":"docker-course/overview-sections/#applying-docker-knowledge-development","text":"Up to this point the course have presented a great deal of information and most of what have been seen in this section was already seen in past sections. The difference was on how what we have seen can be used to implement projects, in this case the Fibonacci Calculator. Using Docker Compose to state various services, multi-building process and containers configurations.","title":"Applying Docker Knowledge - Development"},{"location":"docker-course/overview-sections/#section-10","text":"","title":"Section 10"},{"location":"docker-course/overview-sections/#applying-docker-knowledge-production","text":"Much like Section 9, in this section our knowledge acquired was applied in order to make the production stage files.","title":"Applying Docker Knowledge - Production"},{"location":"docker-course/overview/","text":"Course Overview General What it is The Docker course is a Udemy course intended for newcomers in the world of Docker and application containerization. Along with Docker the course also teach concepts of CI and how to use AWS and Travis. There is a dedicated Kubernetes portion of the course, but it won't be covered by this documentation as of now. How it works Most of the lectures involves following the teacher through a series of commands lines in the terminal. Other times it's required to code along with a code editor. Rarely the lesson will be on another webpage like AWS and the teacher will show how to setup some configurations. Almost all of the instructions are not required to be followed at all and the files are available to download. To convey real world applications using Docker the course introduces small projects. These projects give a good idea of how DevOps operations and how integration between Travis, GitHub and AWS works. Why use it It's a good introduction to what Docker is and how to use it. The lessons are brief, but efficient and they are challenging enough without feeling overwhelming. The series of project helps a lot in understanding the uses od Docker in real world applications.","title":"Course Overview"},{"location":"docker-course/overview/#course-overview","text":"","title":"Course Overview"},{"location":"docker-course/overview/#general","text":"","title":"General"},{"location":"docker-course/overview/#what-it-is","text":"The Docker course is a Udemy course intended for newcomers in the world of Docker and application containerization. Along with Docker the course also teach concepts of CI and how to use AWS and Travis. There is a dedicated Kubernetes portion of the course, but it won't be covered by this documentation as of now.","title":"What it is"},{"location":"docker-course/overview/#how-it-works","text":"Most of the lectures involves following the teacher through a series of commands lines in the terminal. Other times it's required to code along with a code editor. Rarely the lesson will be on another webpage like AWS and the teacher will show how to setup some configurations. Almost all of the instructions are not required to be followed at all and the files are available to download. To convey real world applications using Docker the course introduces small projects. These projects give a good idea of how DevOps operations and how integration between Travis, GitHub and AWS works.","title":"How it works"},{"location":"docker-course/overview/#why-use-it","text":"It's a good introduction to what Docker is and how to use it. The lessons are brief, but efficient and they are challenging enough without feeling overwhelming. The series of project helps a lot in understanding the uses od Docker in real world applications.","title":"Why use it"},{"location":"docker-course/projects/","text":"Projects Throughout the Docker course some projects were developed. In order to keep the repository for this documentation clean, every file was moved to another repository. Some projects required to be in different repositories to star with and they are also listed below. Small Projects Here can be found three small projects using Docker: a simple webpage with plain text, a webpage with a visits counter and a webpage using React. Travis and AWS React App In here is a project that uses Travis and AWS integration to deploy a simple React App. Fibonacci Sequence Calculator This project is the implementation of a Fibonacci Calculator using React.","title":"Projects"},{"location":"docker-course/projects/#projects","text":"Throughout the Docker course some projects were developed. In order to keep the repository for this documentation clean, every file was moved to another repository. Some projects required to be in different repositories to star with and they are also listed below.","title":"Projects"},{"location":"docker-course/projects/#small-projects","text":"Here can be found three small projects using Docker: a simple webpage with plain text, a webpage with a visits counter and a webpage using React.","title":"Small Projects"},{"location":"docker-course/projects/#travis-and-aws-react-app","text":"In here is a project that uses Travis and AWS integration to deploy a simple React App.","title":"Travis and AWS React App"},{"location":"docker-course/projects/#fibonacci-sequence-calculator","text":"This project is the implementation of a Fibonacci Calculator using React.","title":"Fibonacci Sequence Calculator"},{"location":"linux-course/overview-sections/","text":"Course Sections Here we present an overview of what each section talks about. Section 1 UNIX and Linux History Since this course might be someones first encounter with Linux it starts off teaching more about Linux and UNIX. It goes back in time and show how UNIX and Linux came to be. Basic OS Concepts General idea of what an OS is, it's attributions and it's key components. Section 2 Virtual Machines What is a Virtual Machine, how it functions and how to set one up running Linux. Linux vs Windows Main differences between most Linux distributions and Windows. Linux Distributions What are Linux distributions and some examples of the most important and well known ones. Section 3 Using a Command Prompt How to use a command prompt, general command prompt line interface and how to regain control of the prompt in case you lose it ( ctrl+c ). Remote Access How remote access of a Linux machine works and a easy use to do it using PuTTY. Network Commands It is presented two network commands in this section. ip Command The ip command is used to show and manipulate routing, network devices, interfaces and tunnels. ip ip route [command] ifconfig Command The ifconfig command is used to configure a network interface. ifconfig ifconfig up Important Facts Linux has some very specific characteristics: There is a super user in Linux known as root that can modify, create and delete accounts and configuration files; Linux is a case-sensitive system; It might have some problems with files that have space in their name. Changing Passwords To change an user password the passwd command. passwd Command passwd [options] [user-id] Linux File System Linux has a way in which it structures its files. It is shown below. Files Navigation The most used commands for file navigation are ls , cd and pwd . ls Command The ls command list all the contents within a directory. ls ls -la [dir] ls -ltr [file] cd Command The cd command change the working directory of the shell. cd .. cd ~/Desktop/ cd [dir] pwd Command The pwd command the current working directory of the shell. pwd Absolute and Relative Paths A absolute path starts with / and refers to the root directory. cd /var/log/httpd A relative path reference a location relative to the current position. cd /var cd log cd httpd Directory Listing Attributes When using the command ls we can see some information of the files listed. The first column shows the filetype and permissions. The second shows the number of hard links to that file. Then comes the owner and the group associated with that file. The fifth column shows the size in bytes. The last two portions tell the date of the last modification to that file and the files name. Creating Files and Directories touch Command The touch command can be used to create an empty file. touch [file] cp Command The cp command copies files and directories. cp [original-file] [/otherdir/copied-file] cp [original-dir] [copied-dir] vi Command The vi command starts up the vi or vim text editor. vi vi [file] mkdir Command The mkdir creates a directory. mkdir [dir] Finding Files and Directories To search for a file or directory we can use the find command or the locate command. find Command The find command searches for files and directories that have a specific expression in their name in a directory hierarchy. find log locate Command The locate command searches for files and directories that have a specific expression in their name in a database it keeps. Since it doesn't have to search the whole system it's faster than using find , but requires to periodically updates its database using the updatedb command. sudo updatedb locate log Wildcards The command prompt works with some wildcards to make easier manipulating files. Some wildcards are: * : represents zero or more characters; ? : represents a single character; { } : represents a range of characters. touch abc-{1..9} rm abc-? touch abc-{1..9} rm ab* Hard and Soft Links hard links are related directly to the file inode so it will still link to the file even if the original file is deleted. A soft link is related to the file linked to the inode, so it will be lost if the file is deleted. Links can be created using the ln command. Soft links require the -s option. ln command ln [file] [link-name] ln -s [file] [link-name] Filesystem Color Definition Linux have a color scheme to help clearly identify files and directories in the command prompt. Section 4 Standard Command Line Syntax We have used commands a few times so far, but have never really seen how a command syntax really is. Below is presented said syntax. command [options] [argument] Files Permission Every file has 3 levels: user ( u ), group ( g ) and others ( o ). To each level can have up to 3 types of permission: read ( r ), write ( w ) and execute ( x ). To change a permission the chmod command is used. chmod command chmod u+x [file] chmod 754 [file] File Ownership Every file or directory is attached to two types of ownership: user and group ownership. To change these ownerships we use chown and chgrp . chmown command chown [user] [file] chmgrp command chgrp [group] [file] Help Commands Most of the time it's faster to search for help within the command prompt. The main commands for that are man and whatis . The --help option is also a great way to do it. man command It shows a interface for the system manual concerning some command or program. man [command] man [program] whatis command It shows some lines of the manual for a given command or program. whatis [command] whatis [program] --help option Most commands and programs have a --help option that show some information about it. [command] --help [program] --help The Up Arrow and Tab keys On the command prompt we can use the up arrow key as a shortcut to reenter our last commands. The tab key will automatically complete the available command, file or directory. Adding Text to Files There are a few ways to add text to a file. We can use vi as we have seem before. We can also redirect the output of a command to a file using > or >> . Using > will clear the file and add the command output to it, while >> will append the output to a new line in the file. touch file vi file echo \"hello\" > file echo \"there\" >> file Standard Output to a File There is a special command called tee that allows us to store and view the output of a command at the same time. tee command touch file echo \"hello there\" | tee file Pipes A pipe ( | ) is used by the shell to connect the output of a command to the input of another one. [command1] [argument] | [command2] [argument] File Maintenance Commands Most of the usual file maintenance commands we have seen so far ( cp , mkdir , , chgrp , chown , etc). We will focus now on the rm , mv and rmdir commands. rm command This command is used to remove files or directories from the system. It's important to notice that this action is irreversible so it need to be used very carefully. touch file rm file rm -r [dir] mv command This command moves files and directories to new locations. Moving a file or directory to the same location it's a way to change its name. touch file mv file [dir] mv file ./[new-file-name] rmdir command This command is used to remove directories from the system. It's important to notice that this action is irreversible so it need to be used very carefully. mkdir dir rmdir dir File Display Commands There are a few way in which we can display information in the command prompt. We can use ls to list files and directories or echo to echo a message in the prompt. To see a file content we use cat . cat command touch file echo \"hello there\" > file cat file We can also use some filters ( more , less , head , tail , etc) to better the display presentation in the prompt. Filter and Text Processing Commands To better work with text we can use some commands ( cut , awk , grep , egrep , sort , uniq , wc , etc) that allow us to process and filter text display. cut command Used to remove sections form each line of files. touch file echo \"hello there\" > file cut -c2 file awk command Used data extraction. touch file echo \"hello there\" > file awk '/hello/ {print}' file grep and egrep commands Print the lines of a file with a specified pattern. touch file echo \"hello there\" > file echo \"ah, general Kenobi\" >> file grep \"Kenobi\" file egrep -i \"hello|Kenobi\" file sort command Used to sort in alphabetical order. touch file echo \"hello there\" > file echo \"ah, general Kenobi\" >> file sort file uniq command Used to remove duplicates. touch file echo \"hello there\" > file echo \"hello there\" >> file echo \"ah, general Kenobi\" >> file uniq file wc command Used to count the number of words, new lines and bytes. touch file echo \"hello there\" > file echo \"ah, general Kenobi\" >> file wc file Comparing Files The main commands used to compare files are diff and cmp . diff command Used to compare files line by line. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 diff file1 file2 cmp command Used to compare files byte by byte. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 cmp file1 file2 Compressing and Decompressing Files To compress and decompress files the mainly used commands are tar , gzip and gunzip . tar command Used to archive multiple files or to separate them from a given archive. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 tar -cf archive.tar file1 file2 gzip command Used to compress or decompress files. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 tar -cf archive.tar file1 file2 gzip archive.tar gunzip command Used to decompress files. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 tar -cf archive.tar file1 file2 gzip archive.tar gunzip archive.tar.gz Truncating Files We can use the truncate command to truncate a file to an specified size. Note that if the files is larger than the specified size the command will chop out the excess. Should be carefully used. truncate command Used to compress or decompress files. touch file echo \"hello there\" > file truncate -s 2 file Combining and Splitting Files To combine multiple files we can use the cat command and redirect its output to a file. To split a file we use the split command. split command cat file1 file2 file3 > file4 split file4 Comparing Linux and Windows Commands While in Linux the use of the terminal is a common thing, Windows also have a command prompt for command lines. Most of the commands used in Linux have counterparts on Windows. A detailed list of such commands can be found here .","title":"Course Sections"},{"location":"linux-course/overview-sections/#course-sections","text":"Here we present an overview of what each section talks about.","title":"Course Sections"},{"location":"linux-course/overview-sections/#section-1","text":"","title":"Section 1"},{"location":"linux-course/overview-sections/#unix-and-linux-history","text":"Since this course might be someones first encounter with Linux it starts off teaching more about Linux and UNIX. It goes back in time and show how UNIX and Linux came to be.","title":"UNIX and Linux History"},{"location":"linux-course/overview-sections/#basic-os-concepts","text":"General idea of what an OS is, it's attributions and it's key components.","title":"Basic OS Concepts"},{"location":"linux-course/overview-sections/#section-2","text":"","title":"Section 2"},{"location":"linux-course/overview-sections/#virtual-machines","text":"What is a Virtual Machine, how it functions and how to set one up running Linux.","title":"Virtual Machines"},{"location":"linux-course/overview-sections/#linux-vs-windows","text":"Main differences between most Linux distributions and Windows.","title":"Linux vs Windows"},{"location":"linux-course/overview-sections/#linux-distributions","text":"What are Linux distributions and some examples of the most important and well known ones.","title":"Linux Distributions"},{"location":"linux-course/overview-sections/#section-3","text":"","title":"Section 3"},{"location":"linux-course/overview-sections/#using-a-command-prompt","text":"How to use a command prompt, general command prompt line interface and how to regain control of the prompt in case you lose it ( ctrl+c ).","title":"Using a Command Prompt"},{"location":"linux-course/overview-sections/#remote-access","text":"How remote access of a Linux machine works and a easy use to do it using PuTTY.","title":"Remote Access"},{"location":"linux-course/overview-sections/#network-commands","text":"It is presented two network commands in this section.","title":"Network Commands"},{"location":"linux-course/overview-sections/#ip-command","text":"The ip command is used to show and manipulate routing, network devices, interfaces and tunnels. ip ip route [command]","title":"ip Command"},{"location":"linux-course/overview-sections/#ifconfig-command","text":"The ifconfig command is used to configure a network interface. ifconfig ifconfig up","title":"ifconfig Command"},{"location":"linux-course/overview-sections/#important-facts","text":"Linux has some very specific characteristics: There is a super user in Linux known as root that can modify, create and delete accounts and configuration files; Linux is a case-sensitive system; It might have some problems with files that have space in their name.","title":"Important Facts"},{"location":"linux-course/overview-sections/#changing-passwords","text":"To change an user password the passwd command.","title":"Changing Passwords"},{"location":"linux-course/overview-sections/#passwd-command","text":"passwd [options] [user-id]","title":"passwd Command"},{"location":"linux-course/overview-sections/#linux-file-system","text":"Linux has a way in which it structures its files. It is shown below.","title":"Linux File System"},{"location":"linux-course/overview-sections/#files-navigation","text":"The most used commands for file navigation are ls , cd and pwd .","title":"Files Navigation"},{"location":"linux-course/overview-sections/#ls-command","text":"The ls command list all the contents within a directory. ls ls -la [dir] ls -ltr [file]","title":"ls Command"},{"location":"linux-course/overview-sections/#cd-command","text":"The cd command change the working directory of the shell. cd .. cd ~/Desktop/ cd [dir]","title":"cd Command"},{"location":"linux-course/overview-sections/#pwd-command","text":"The pwd command the current working directory of the shell. pwd","title":"pwd Command"},{"location":"linux-course/overview-sections/#absolute-and-relative-paths","text":"A absolute path starts with / and refers to the root directory. cd /var/log/httpd A relative path reference a location relative to the current position. cd /var cd log cd httpd","title":"Absolute and Relative Paths"},{"location":"linux-course/overview-sections/#directory-listing-attributes","text":"When using the command ls we can see some information of the files listed. The first column shows the filetype and permissions. The second shows the number of hard links to that file. Then comes the owner and the group associated with that file. The fifth column shows the size in bytes. The last two portions tell the date of the last modification to that file and the files name.","title":"Directory Listing Attributes"},{"location":"linux-course/overview-sections/#creating-files-and-directories","text":"","title":"Creating Files and Directories"},{"location":"linux-course/overview-sections/#touch-command","text":"The touch command can be used to create an empty file. touch [file]","title":"touch Command"},{"location":"linux-course/overview-sections/#cp-command","text":"The cp command copies files and directories. cp [original-file] [/otherdir/copied-file] cp [original-dir] [copied-dir]","title":"cp Command"},{"location":"linux-course/overview-sections/#vi-command","text":"The vi command starts up the vi or vim text editor. vi vi [file]","title":"vi Command"},{"location":"linux-course/overview-sections/#mkdir-command","text":"The mkdir creates a directory. mkdir [dir]","title":"mkdir Command"},{"location":"linux-course/overview-sections/#finding-files-and-directories","text":"To search for a file or directory we can use the find command or the locate command.","title":"Finding Files and Directories"},{"location":"linux-course/overview-sections/#find-command","text":"The find command searches for files and directories that have a specific expression in their name in a directory hierarchy. find log","title":"find Command"},{"location":"linux-course/overview-sections/#locate-command","text":"The locate command searches for files and directories that have a specific expression in their name in a database it keeps. Since it doesn't have to search the whole system it's faster than using find , but requires to periodically updates its database using the updatedb command. sudo updatedb locate log","title":"locate Command"},{"location":"linux-course/overview-sections/#wildcards","text":"The command prompt works with some wildcards to make easier manipulating files. Some wildcards are: * : represents zero or more characters; ? : represents a single character; { } : represents a range of characters. touch abc-{1..9} rm abc-? touch abc-{1..9} rm ab*","title":"Wildcards"},{"location":"linux-course/overview-sections/#hard-and-soft-links","text":"hard links are related directly to the file inode so it will still link to the file even if the original file is deleted. A soft link is related to the file linked to the inode, so it will be lost if the file is deleted. Links can be created using the ln command. Soft links require the -s option.","title":"Hard and Soft Links"},{"location":"linux-course/overview-sections/#ln-command","text":"ln [file] [link-name] ln -s [file] [link-name]","title":"ln command"},{"location":"linux-course/overview-sections/#filesystem-color-definition","text":"Linux have a color scheme to help clearly identify files and directories in the command prompt.","title":"Filesystem Color Definition"},{"location":"linux-course/overview-sections/#section-4","text":"","title":"Section 4"},{"location":"linux-course/overview-sections/#standard-command-line-syntax","text":"We have used commands a few times so far, but have never really seen how a command syntax really is. Below is presented said syntax. command [options] [argument]","title":"Standard Command Line Syntax"},{"location":"linux-course/overview-sections/#files-permission","text":"Every file has 3 levels: user ( u ), group ( g ) and others ( o ). To each level can have up to 3 types of permission: read ( r ), write ( w ) and execute ( x ). To change a permission the chmod command is used.","title":"Files Permission"},{"location":"linux-course/overview-sections/#chmod-command","text":"chmod u+x [file] chmod 754 [file]","title":"chmod command"},{"location":"linux-course/overview-sections/#file-ownership","text":"Every file or directory is attached to two types of ownership: user and group ownership. To change these ownerships we use chown and chgrp .","title":"File Ownership"},{"location":"linux-course/overview-sections/#chmown-command","text":"chown [user] [file]","title":"chmown command"},{"location":"linux-course/overview-sections/#chmgrp-command","text":"chgrp [group] [file]","title":"chmgrp command"},{"location":"linux-course/overview-sections/#help-commands","text":"Most of the time it's faster to search for help within the command prompt. The main commands for that are man and whatis . The --help option is also a great way to do it.","title":"Help Commands"},{"location":"linux-course/overview-sections/#man-command","text":"It shows a interface for the system manual concerning some command or program. man [command] man [program]","title":"man command"},{"location":"linux-course/overview-sections/#whatis-command","text":"It shows some lines of the manual for a given command or program. whatis [command] whatis [program]","title":"whatis command"},{"location":"linux-course/overview-sections/#-help-option","text":"Most commands and programs have a --help option that show some information about it. [command] --help [program] --help","title":"--help option"},{"location":"linux-course/overview-sections/#the-up-arrow-and-tab-keys","text":"On the command prompt we can use the up arrow key as a shortcut to reenter our last commands. The tab key will automatically complete the available command, file or directory.","title":"The Up Arrow and Tab keys"},{"location":"linux-course/overview-sections/#adding-text-to-files","text":"There are a few ways to add text to a file. We can use vi as we have seem before. We can also redirect the output of a command to a file using > or >> . Using > will clear the file and add the command output to it, while >> will append the output to a new line in the file. touch file vi file echo \"hello\" > file echo \"there\" >> file","title":"Adding Text to Files"},{"location":"linux-course/overview-sections/#standard-output-to-a-file","text":"There is a special command called tee that allows us to store and view the output of a command at the same time.","title":"Standard Output to a File"},{"location":"linux-course/overview-sections/#tee-command","text":"touch file echo \"hello there\" | tee file","title":"tee command"},{"location":"linux-course/overview-sections/#pipes","text":"A pipe ( | ) is used by the shell to connect the output of a command to the input of another one. [command1] [argument] | [command2] [argument]","title":"Pipes"},{"location":"linux-course/overview-sections/#file-maintenance-commands","text":"Most of the usual file maintenance commands we have seen so far ( cp , mkdir , , chgrp , chown , etc). We will focus now on the rm , mv and rmdir commands.","title":"File Maintenance Commands"},{"location":"linux-course/overview-sections/#rm-command","text":"This command is used to remove files or directories from the system. It's important to notice that this action is irreversible so it need to be used very carefully. touch file rm file rm -r [dir]","title":"rm command"},{"location":"linux-course/overview-sections/#mv-command","text":"This command moves files and directories to new locations. Moving a file or directory to the same location it's a way to change its name. touch file mv file [dir] mv file ./[new-file-name]","title":"mv command"},{"location":"linux-course/overview-sections/#rmdir-command","text":"This command is used to remove directories from the system. It's important to notice that this action is irreversible so it need to be used very carefully. mkdir dir rmdir dir","title":"rmdir command"},{"location":"linux-course/overview-sections/#file-display-commands","text":"There are a few way in which we can display information in the command prompt. We can use ls to list files and directories or echo to echo a message in the prompt. To see a file content we use cat .","title":"File Display Commands"},{"location":"linux-course/overview-sections/#cat-command","text":"touch file echo \"hello there\" > file cat file We can also use some filters ( more , less , head , tail , etc) to better the display presentation in the prompt.","title":"cat command"},{"location":"linux-course/overview-sections/#filter-and-text-processing-commands","text":"To better work with text we can use some commands ( cut , awk , grep , egrep , sort , uniq , wc , etc) that allow us to process and filter text display.","title":"Filter and Text Processing Commands"},{"location":"linux-course/overview-sections/#cut-command","text":"Used to remove sections form each line of files. touch file echo \"hello there\" > file cut -c2 file","title":"cut command"},{"location":"linux-course/overview-sections/#awk-command","text":"Used data extraction. touch file echo \"hello there\" > file awk '/hello/ {print}' file","title":"awk command"},{"location":"linux-course/overview-sections/#grep-and-egrep-commands","text":"Print the lines of a file with a specified pattern. touch file echo \"hello there\" > file echo \"ah, general Kenobi\" >> file grep \"Kenobi\" file egrep -i \"hello|Kenobi\" file","title":"grep and egrep commands"},{"location":"linux-course/overview-sections/#sort-command","text":"Used to sort in alphabetical order. touch file echo \"hello there\" > file echo \"ah, general Kenobi\" >> file sort file","title":"sort command"},{"location":"linux-course/overview-sections/#uniq-command","text":"Used to remove duplicates. touch file echo \"hello there\" > file echo \"hello there\" >> file echo \"ah, general Kenobi\" >> file uniq file","title":"uniq command"},{"location":"linux-course/overview-sections/#wc-command","text":"Used to count the number of words, new lines and bytes. touch file echo \"hello there\" > file echo \"ah, general Kenobi\" >> file wc file","title":"wc command"},{"location":"linux-course/overview-sections/#comparing-files","text":"The main commands used to compare files are diff and cmp .","title":"Comparing Files"},{"location":"linux-course/overview-sections/#diff-command","text":"Used to compare files line by line. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 diff file1 file2","title":"diff command"},{"location":"linux-course/overview-sections/#cmp-command","text":"Used to compare files byte by byte. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 cmp file1 file2","title":"cmp command"},{"location":"linux-course/overview-sections/#compressing-and-decompressing-files","text":"To compress and decompress files the mainly used commands are tar , gzip and gunzip .","title":"Compressing and Decompressing Files"},{"location":"linux-course/overview-sections/#tar-command","text":"Used to archive multiple files or to separate them from a given archive. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 tar -cf archive.tar file1 file2","title":"tar command"},{"location":"linux-course/overview-sections/#gzip-command","text":"Used to compress or decompress files. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 tar -cf archive.tar file1 file2 gzip archive.tar","title":"gzip command"},{"location":"linux-course/overview-sections/#gunzip-command","text":"Used to decompress files. touch file1 echo \"hello there\" > file1 touch file2 echo \"ah, general Kenobi\" > file2 tar -cf archive.tar file1 file2 gzip archive.tar gunzip archive.tar.gz","title":"gunzip command"},{"location":"linux-course/overview-sections/#truncating-files","text":"We can use the truncate command to truncate a file to an specified size. Note that if the files is larger than the specified size the command will chop out the excess. Should be carefully used.","title":"Truncating Files"},{"location":"linux-course/overview-sections/#truncate-command","text":"Used to compress or decompress files. touch file echo \"hello there\" > file truncate -s 2 file","title":"truncate command"},{"location":"linux-course/overview-sections/#combining-and-splitting-files","text":"To combine multiple files we can use the cat command and redirect its output to a file. To split a file we use the split command.","title":"Combining and Splitting Files"},{"location":"linux-course/overview-sections/#split-command","text":"cat file1 file2 file3 > file4 split file4","title":"split command"},{"location":"linux-course/overview-sections/#comparing-linux-and-windows-commands","text":"While in Linux the use of the terminal is a common thing, Windows also have a command prompt for command lines. Most of the commands used in Linux have counterparts on Windows. A detailed list of such commands can be found here .","title":"Comparing Linux and Windows Commands"},{"location":"linux-course/overview/","text":"Course Overview General What it is It's a Udemy course focused in teaching how to use Linux OS from the very start. The main objective is to form a fully capable IT professional by the end of the course. How it works The teacher takes a whole lesson to show in details every command. Most of the time everything is shown live as the teacher inputs the command lines in the terminal, but sometimes que uses presentations to complement what he is saying. Why use it Linux is not the most used OS when it comes to domestic users and the difference between Linux distributions and Mac or Windows cab be challenging at first. The course so favor has been very useful and have a good learning curve.","title":"Course Overview"},{"location":"linux-course/overview/#course-overview","text":"","title":"Course Overview"},{"location":"linux-course/overview/#general","text":"","title":"General"},{"location":"linux-course/overview/#what-it-is","text":"It's a Udemy course focused in teaching how to use Linux OS from the very start. The main objective is to form a fully capable IT professional by the end of the course.","title":"What it is"},{"location":"linux-course/overview/#how-it-works","text":"The teacher takes a whole lesson to show in details every command. Most of the time everything is shown live as the teacher inputs the command lines in the terminal, but sometimes que uses presentations to complement what he is saying.","title":"How it works"},{"location":"linux-course/overview/#why-use-it","text":"Linux is not the most used OS when it comes to domestic users and the difference between Linux distributions and Mac or Windows cab be challenging at first. The course so favor has been very useful and have a good learning curve.","title":"Why use it"}]}